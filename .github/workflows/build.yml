name: Build Linphone
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    continue-on-error: true
    env:
      Qt5_DIR: ${{ github.workspace }}\Qt\5.15.2\msvc2019_64\lib\cmake\Qt5
      LIBLINPHONE_VERSION: 5.3.0
      GIT_EXECUTABLE: C:\Program Files\Git\bin\git.exe
      NINJA_LOCATION: C:/Program Files/Microsoft Visual Studio/2022/Enterprise/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe
      MESON_LOCATION: C:/hostedtoolcache/windows/Python/3.12.3/x64/Scripts/meson.exe
    steps:
      - name: Disable Line Ending Auto Conversion
        run: git config --global core.autocrlf input

      - name: Checkout Sorenson Linphone Repo
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      
      - name: Install VS Dependencies
        run: |
          choco install visualstudio2022-workload-universal --package-parameters "--includeRecommended --includeOptional --norestart"
          choco install visualstudio2022-workload-nativedesktop --package-parameters "--includeRecommended --includeOptional --norestart"
          choco install visualstudio2022-workload-manageddesktop --package-parameters "--includeRecommended --includeOptional --norestart"
          choco install vcredist2010

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          dir: ${{ github.workspace }}

      - name: Install MSYS2
        uses: msys2/setup-msys2@v2
        with:
          location: ${{ github.workspace }}
          install: >-
            git
            base-devel 
            mingw-w64-i686-toolchain

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.3'

      - name: Install NASM
        uses: ilammy/setup-nasm@v1
        with:
          destination: ${{ github.workspace }}\utils\nasm

      - name: Install YASM
        run: |
          cd "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools"
          curl http://www.tortall.net/projects/yasm/releases/yasm-1.3.0-win32.exe -o yasm.exe

      - name: Install Doxygen
        uses: ssciwr/doxygen-install@v1
        with:
            version: "1.9.8"
            
      - name: Install Perl
        uses: shogo82148/actions-setup-perl@v1
        with:
          perl-version: "5.38"
          distribution: strawberry
          
      - name: Install 7-Zip
        uses: milliewalky/setup-7-zip@v1
      
      - name: Install NSIS
        run: choco install nsis

      - name: Add PATH vars
        run: |
          "${{ github.workspace }}\Qt\5.15.2\msvc2019_64\bin;${{ github.workspace }}\msys64\mingw64\bin;${{ github.workspace }}\msys64;${{ github.workspace }}\msys64\usr\bin;${{ github.workspace }}\utils\nasm;" | Out-File -FilePath $env:GITHUB_PATH -Append
          
      - name: CMD
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install Additional Linphone Dependencies
        shell: cmd
        run: | 
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"
          pip3 install pystache six meson    

      - name: Initialize VS Cmd Prompt
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"

      - name: Configure Linphone
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"
          SET Qt5_DIR=${{ env.Qt5_DIR }}
          cd ${{ github.workspace }}
          mkdir build
          cd build
          cmake .. -DLINPHONESDK_PLATFORM=Desktop -DENABLE_CSHARP_WRAPPER=YES -DCMAKE_BUILD_TYPE=RelWithDebInfo -DENABLE_G729=ON -DENABLE_PQCRYPTO=ON -DENABLE_GPL_THIRD_PARTIES=ON -A x64

      - name: Patch Build Files
        shell: cmd
        run: |
          cd ${{github.workspace}}
          python -m post_config_patch --ninja "${{env.NINJA_LOCATION}}" --meson "${{ env.MESON_LOCATION }}"
      
      - name: Build Linphone
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"
          SET Qt5_DIR=${{ env.Qt5_DIR }}
          cd ${{ github.workspace }}\build
          cmake --build . --target PACKAGE --config RelWithDebInfo
      

      - name: Upload Build
        uses: actions/upload-artifact@v4
        if: always()
        with:
            name: Build Artifact
            path: ${{ github.workspace }}\build
            overwrite: true